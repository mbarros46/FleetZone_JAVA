-- Script para adicionar tabela de IoT - MotoMovimento
-- Execute este script após criar as tabelas principais
-- RM556652

-- ======================================
-- TABELA MOTO_MOVIMENTO (IoT Integration)
-- ======================================
CREATE TABLE moto_movimento (
    id NUMBER(19) GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    placa VARCHAR2(10) NOT NULL,
    patio_id NUMBER(19),
    endereco VARCHAR2(200),
    data_movimento TIMESTAMP NOT NULL,
    tipo_movimento VARCHAR2(50) DEFAULT 'ENTRADA',
    moto_id NUMBER(19),
    patio_destino_id NUMBER(19),
    CONSTRAINT fk_movimento_moto FOREIGN KEY (moto_id) REFERENCES moto(id),
    CONSTRAINT fk_movimento_patio FOREIGN KEY (patio_destino_id) REFERENCES patio(id),
    CONSTRAINT ck_tipo_movimento CHECK (tipo_movimento IN ('ENTRADA', 'SAIDA', 'TRANSFERENCIA'))
);

-- ======================================
-- ÍNDICES PARA PERFORMANCE
-- ======================================
CREATE INDEX idx_movimento_placa ON moto_movimento(placa);
CREATE INDEX idx_movimento_patio ON moto_movimento(patio_id);
CREATE INDEX idx_movimento_data ON moto_movimento(data_movimento);
CREATE INDEX idx_movimento_tipo ON moto_movimento(tipo_movimento);

-- ======================================
-- DADOS DE EXEMPLO IoT
-- ======================================

-- Simular dados IoT baseados no exemplo fornecido
INSERT INTO moto_movimento (placa, patio_id, endereco, data_movimento, tipo_movimento) VALUES (
    'ABC-1234', 
    3, 
    'Pátio da Paulista', 
    TIMESTAMP '2025-10-30 20:07:17',
    'ENTRADA'
);

-- Mais alguns dados de exemplo
INSERT INTO moto_movimento (placa, patio_id, endereco, data_movimento, tipo_movimento) VALUES (
    'DEF-5678', 
    1, 
    'Centro - São Paulo/SP', 
    TIMESTAMP '2025-10-31 08:15:30',
    'ENTRADA'
);

INSERT INTO moto_movimento (placa, patio_id, endereco, data_movimento, tipo_movimento) VALUES (
    'GHI-9012', 
    2, 
    'Vila Olímpia - São Paulo/SP', 
    TIMESTAMP '2025-10-31 09:45:12',
    'TRANSFERENCIA'
);

INSERT INTO moto_movimento (placa, patio_id, endereco, data_movimento, tipo_movimento) VALUES (
    'JKL-3456', 
    3, 
    'Copacabana - Rio de Janeiro/RJ', 
    TIMESTAMP '2025-10-31 11:22:45',
    'ENTRADA'
);

-- ======================================
-- COMMIT DAS TRANSAÇÕES
-- ======================================
COMMIT;

-- ======================================
-- VERIFICAÇÃO DOS DADOS IoT
-- ======================================
SELECT 
    'MOVIMENTOS_IOT' AS TIPO,
    COUNT(*) AS TOTAL 
FROM moto_movimento;

-- Verificar movimentos por placa
SELECT 
    placa,
    COUNT(*) as total_movimentos,
    MAX(data_movimento) as ultimo_movimento
FROM moto_movimento 
GROUP BY placa 
ORDER BY ultimo_movimento DESC;

-- ======================================
-- SCRIPT IoT CONCLUÍDO
-- ======================================
-- Agora sua aplicação pode:
-- 1. Receber dados IoT via API REST
-- 2. Armazenar movimentos das motos
-- 3. Rastrear localização em tempo real
-- 4. Gerar relatórios de movimentação
